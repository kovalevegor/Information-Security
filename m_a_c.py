# -*- coding: utf-8 -*-
"""
Created on Mon Apr  1 21:14:42 2024

@author: gogak
"""
from tabulate import tabulate

# Словарь пользователей и их паролей
users = {
    "God": "god",
    "Angel": "angel",
    "King": "king",
    "Prophet": "prophet",
    "Peasant": "peasant",
    "Pawn": "pawn",
}

user_level = {
    "God": 3,
    "Angel": 3,
    "King": 2, 
    "Prophet": 2,
    "Peasant": 1,
    "Pawn": 0,
    }

# Словарь данных
data = {
    # Будущее
    7: [3, "Ты умрешь..."],
    # Смысл жизни
    6: [3, "Не есть сладкого и ложиться спать до двеннадцати"],
    # Библия
    5: [2, "Это история любви Бога к людям, история спасения и надежды."],
    # Жития святых
    4: [2, "Во дни княжения Владимира Святославича, просветившего Русь светом Христовой веры, жили два сына его, Борис и Глеб. Благочестивые и кроткие, они являлись образцом христианского жития.После кончины отца старший брат Святополк, одержимый жаждой власти, убил своих братьев, Бориса и Глеба. Невинные мученики, не противившиеся злу, приняли смерть с кротостью и смирением. Их души воспарили к престолу Господа, где они обрели нетленный венец славы. С тех пор Борис и Глеб стали небесными покровителями Русской земли, заступниками и помощниками всех верующих. Их мощи, источающие чудеса, являют собой источник духовной силы и утешения. Память святых князей Бориса и Глеба вечно жива в сердцах людей, чтущих их за веру, любовь к ближним и самоотверженность."],
    # Исторические хроники
    3: [1, "И пошёл Олег на Царьград, оставив Игоря в Киеве. Придя к Царьграду, он вытащил свои корабли на сушу и повелел воинам сделать колеса. И поставили корабли на колеса, и поднялся ветер, и поплыли корабли по полю. Греки же, увидев это, испугались и сказали: \"Это не люди, а святые идут на нас!\". И послали к Олегу, прося мира и давая дань. Олег же, немного постояв у Царьграда, заключил мир с греками и взял с них дань, и вернулся в Киев."],
    # Светская литература
    2: [1, "Кого интересует эта скукотища?"],
    # Проповеди
    1: [0, "Слушайте, люди, и внимайте моим словам, ибо я несу вам весть о сверхчеловеке! Бог мертв! Мы сами должны стать творцами своих ценностей, обрести волю к власти и провозгласить новую эру. Сверхчеловек – это тот, кто стоит над добром и злом, кто создает свои собственные законы. Станьте сверхчеловеками, братья и сестры! Преодолейте себя, обретите свободу и силу! Вечное возвращение – вот истина бытия. Все события будут повторяться бесконечное число раз, поэтому каждый момент жизни драгоценен. Не цепляйтесь за старое, переоцените ценности! Amor fati – любите свою судьбу, даже если она трагична. В каждом из вас живет дионисийское и аполлоническое начала: стремление к хаосу и экстазу, а также к порядку и гармонии. Творчество – это основа жизни. Превратите свою жизнь в произведение искусства, живите без оглядки на прошлое. Будьте верны земле, не ищите утешения в потустороннем мире. Мир станет лучше, если каждый из нас станет творцом своего счастья. Такова проповедь Заратустры. Прислушайтесь к ней, и она озарит ваш путь!"],
    # Сказки и легенды
    0: [0, "В те давние времена жил герой по имени Беовульф. Из геатских земель пришел он в Данию, где чудовище Грендель сеяло страх. Сразился Беовульф с монстром, одолел его и спас короля Хродгара. Но не ведал он покоя. Мать Гренделя явилась, мстя за сына. Отправился Беовульф в ее логово, тьмой окутанное, и там с ней сразился. Одолел и ее, вернув мир в королевство. Вернулся Беовульф на родину, королем стал. Но не везло ему - дракон свирепый напал на его земли. Сразился Беовульф с драконом, но рану смертельную получил. Скончался герой, но слава о нем жива. Помните, воины, о Беовульфе, о его доблести и чести!"],
}
# (read, write, delete, append, exit, help)
# Словарь меток конфиденциальности
action_levels = {
    "God": (3, 3, 3, 3),
    "Angel": (3, 2, 2, 2),
    "King": (2, 1, 1, 1),
    "Prophet": (2, 2, 0, 0),
    "Peasant": (1, 0, 0, 0),
    "Pawn": (0, 0, 0, 0),
}



# Функция проверки пароля
def authenticate(username: str, password: str) -> bool:
    return users.get(username) == password

# Функция проверки доступа
def has_access(username: str, label: int, action: int) -> bool:
    if data[label][0] <= user_level[username]:
        if action_levels[username][action] >= action:
            return True
    else: return False

# Функция чтения данных
def read_data(label: int) -> None:
    if not has_access(username, label, 0):
        print("Доступ запрещен!")
        return
    print(f"Данные с меткой {label}: \n{data[label][1]}")

# Функция записи данных
def write_data(label: int, new_data: str) -> None:
    if not has_access(username, label, 1):
        print("Доступ запрещен!")
        return
    # print(f"Данные с меткой {label}")
    data[label][1] = new_data
    print(f"Данные с меткой {label} обновлены: \n{data[label][1]}")

# Функция удаления данных (замены на пустую строку)
def delete_data(label: int) -> None:
    if not has_access(username, label, 2):
        print("Доступ запрещен!")
        return
    data[label][1] = ""
    print(f"Данные с меткой {label} удалены!")

# Функция дописывания данных
def append_data(label: int, new_data: str) -> None:
    if not has_access(username, label, 3):
        print("Доступ запрещен!")
        return
    data[label][1] += new_data
    print(f"Данные с меткой {label} обновлены: \n{data[label][1]}")

# Инициализация данных
access_description = {
    "forbidden": "Запретная информация",
    "secret": "Конфиденциальная информация",
    "confidential": "Информация для служебного пользования",
    "public": "Открытая информация",
}

# Вход в систему
username = input("Введите имя пользователя: ")
password = input("Введите пароль: ")

if not authenticate(username, password):
    print("Неверный логин или пароль")
    exit()

# Работа с данными
for _ in iter(int, 1):
    command = input("Введите команду (read, write, delete, append, exit, help): ")
    __help = (
              ['7', 'Будущее', 'Особой важности'],
              ['6', 'Смысл жизни', 'Особой важности'],
              ['5', 'Библия', 'Секретно'],
              ['4', 'Жития святых', 'Секретно'],
              ['3', 'Исторические хроники', 'Конфиденциально'],
              ['2', 'Светская литература', 'Конфиденциально'],
              ['1', 'Проповеди', 'Публичная информация'],
              ['0', 'Сказки и легенды', 'Публичная информация'])
    if command == 'help': 
        # print('This program is designed to encrypt and decrypt messages\n'+
        #       'Enter the following commands on separate lines.\n')
        print(tabulate(__help, headers=['Метка', 'Данные', 'Уровень доступа'], 
                       tablefmt='rounded_grid'), end='\n\n'); 
    elif command == "exit":
        break

    elif command == "read":
        label = int(input("Введите метку данных: "))
        read_data(label)
    elif command == "write":
        label = int(input("Введите метку данных: "))
        new_data = input("Введите новые данные: ")
        write_data(label, new_data)
    elif command == "delete":
        label = int(input("Введите метку данных: "))
        delete_data(label)
    elif command == "append":
        label = int(input("Введите метку данных: "))
        new_data = input("Введите данные, которые нужно добавить: ")
        append_data(label, new_data)
    else:
        print("Неверная команда")



























